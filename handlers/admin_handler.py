from telegram import Update, ReplyKeyboardMarkup
from telegram.ext import CallbackContext, ConversationHandler
from database import add_story, get_stories, get_user_role

# ‚úÖ –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏—è
ASK_STORY, ASK_FREQUENCY = range(2)

async def admin_panel(update: Update, context: CallbackContext):
    """–ö–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∞–º"""
    user_id = update.effective_user.id
    role = get_user_role(user_id)

    if role != "admin":
        await update.message.reply_text("üö´ –£ —Ç–µ–±—è –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥–µ.")
        return

    keyboard = [["–°–æ–∑–¥–∞—Ç—å —Å—Ç–æ—Ä–∏", "–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å—Ç–æ—Ä–∏"]]
    reply_markup = ReplyKeyboardMarkup(keyboard, one_time_keyboard=True, resize_keyboard=True)

    await update.message.reply_text("üîß –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å", reply_markup=reply_markup)

async def create_story(update: Update, context: CallbackContext):
    """–ù–∞—á–∞–ª–æ –ø—Ä–æ—Ü–µ—Å—Å–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Å—Ç–æ—Ä–∏"""
    await update.message.reply_text("‚úè –í—Å—Ç–∞–≤—å –µ—ë —Å—é–¥–∞ —Å–∫–æ—Ä–µ–µ!")
    return ASK_STORY

async def receive_story(update: Update, context: CallbackContext):
    """–ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ —Å—Ç–æ—Ä–∏"""
    context.user_data["story"] = update.message.text
    await update.message.reply_text("üì© –ù–∞–ø–∏—à–∏ –∫–∞–∫ —á–∞—Å—Ç–æ —à–ª–µ–º (–≤ —á–∞—Å–∞—Ö)")
    return ASK_FREQUENCY

async def receive_frequency(update: Update, context: CallbackContext):
    """–ü–æ–ª—É—á–µ–Ω–∏–µ —á–∞—Å—Ç–æ—Ç—ã —Ä–∞—Å—Å—ã–ª–∫–∏"""
    frequency = update.message.text
    if not frequency.isdigit():
        await update.message.reply_text("‚õî –í–≤–µ–¥–∏ —á–∏—Å–ª–æ (–∫–æ–ª-–≤–æ —á–∞—Å–æ–≤). –ü–æ–ø—Ä–æ–±—É–π —Å–Ω–æ–≤–∞.")
        return ASK_FREQUENCY

    frequency = int(frequency)
    story_text = context.user_data["story"]

    # ‚úÖ –î–æ–±–∞–≤–ª—è–µ–º –≤ –ë–î
    story_id = add_story(story_text, frequency)

    await update.message.reply_text(f"‚úÖ –°—Ç–æ—Ä–∏ #{story_id} –¥–æ–±–∞–≤–ª–µ–Ω–∞!\n–ß–∞—Å—Ç–æ—Ç–∞: {frequency} —á–∞—Å–æ–≤")
    return ConversationHandler.END

async def list_stories(update: Update, context: CallbackContext):
    """–í—ã–≤–æ–¥ —Å–ø–∏—Å–∫–∞ —Å—Ç–æ—Ä–∏–∑"""
    stories = get_stories()

    if not stories:
        await update.message.reply_text("üì≠ –ü–æ–∫–∞ –Ω–µ—Ç —Å—Ç–æ—Ä–∏–∑.")
        return

    message = "üìú –°–ø–∏—Å–æ–∫ —Å—Ç–æ—Ä–∏–∑:\n"
    for story in stories:
        message += f"{story['id']} - {' '.join(story['text'].split()[:4])}... - {story['frequency']}—á\n"

    await update.message.reply_text(message)
